Protocol 2
Compression yes

# Symmetric-Key Ciphers
#
# Prefer ChaCha20 due to its modern and open-source origins.  stick
# to counter mode AES at 256 bit strength.

Ciphers chacha20-poly1305@openssh.com,aes256-ctr

# Public-Key Ciphers
#
# Prefer PQC, then larger NIST P-curves (521, 384), then Curve25519,
# then NIST P-256.  Larger curves maximizes the time to when a quantum
# attack will be viable.
#
# Don't use RSA at all, due to the risks arising from RSA-specific
# quantum attacks, and recent other scares.

HostbasedAcceptedAlgorithms ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp521,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp384,ssh-ed25519-cert-v01@openssh.com,ssh-ed25519,ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp256
HostKeyAlgorithms ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp521,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp384,ssh-ed25519-cert-v01@openssh.com,ssh-ed25519,ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp256
KexAlgorithms sntrup761x25519-sha512@openssh.com,ecdh-sha2-nistp521,ecdh-sha2-nistp384,curve25519-sha256@libssh.org,curve25519-sha256,ecdh-sha2-nistp256
PubkeyAcceptedKeyTypes ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp521,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp384,ssh-ed25519-cert-v01@openssh.com,ssh-ed25519,ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp256

# MACs

MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-512,hmac-sha2-256-etm@openssh.com,hmac-sha2-256

# Turn on GSSAPI authentication, allow credential delegation to
# carry tickets around with us as we SSH around a network.

GSSAPIAuthentication yes
GSSAPICleanupCredentials yes
KerberosAuthentication yes
KerberosTicketCleanup yes
PasswordAuthentication yes
UsePAM no

# Safety check.
PermitEmptyPasswords no